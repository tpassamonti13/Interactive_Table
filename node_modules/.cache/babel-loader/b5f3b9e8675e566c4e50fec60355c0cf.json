{"ast":null,"code":"import _defineProperty from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anthonypassamonti/Documents/Personal/Website/react-website/src/components/RevenueChart.js\";\nimport React, { Component } from 'react';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nvar RevenueChart = /*#__PURE__*/function (_Component) {\n  _inherits(RevenueChart, _Component);\n\n  function RevenueChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RevenueChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RevenueChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.chartRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(RevenueChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ctx = this.chartRef.current.getContext(\"2d\");\n      new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\"],\n          datasets: [{\n            data: [4355000, 4468000, 4986000, 5720000, 6044000],\n            label: 'Revenue',\n            backgroundColor: [\"#fff\", \"#fff\", \"#fff\", \"#fff\", \"gold\"],\n            borderColor: ['grey', 'grey', 'grey', 'grey', '#000'],\n            borderWidth: {\n              left: 5,\n              top: 1\n            }\n          }]\n        },\n        plugins: [ChartDataLabels],\n        options: {\n          events: [],\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            },\n            datalabels: _defineProperty({\n              color: [\"grey\", \"grey\", \"grey\", \"grey\", \"#000\"],\n              anchor: 'end',\n              align: 'top',\n              formatter: Math.round,\n              font: {\n                weight: 'normal',\n                size: '16'\n              }\n            }, \"formatter\", function formatter(value, context) {\n              return '$' + value.toLocaleString().slice(0, -4);\n            })\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return RevenueChart;\n}(Component);\n\nexport { RevenueChart as default };","map":{"version":3,"sources":["/Users/anthonypassamonti/Documents/Personal/Website/react-website/src/components/RevenueChart.js"],"names":["React","Component","Chart","ChartDataLabels","RevenueChart","chartRef","createRef","ctx","current","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","left","top","plugins","options","events","responsive","maintainAspectRatio","legend","display","datalabels","color","anchor","align","formatter","Math","round","font","weight","size","value","context","toLocaleString","slice","scales","x","grid","y"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;IAEqBC,Y;;;;;;;;;;;;;;;UAEpBC,Q,GAAWL,KAAK,CAACM,SAAN,E;;;;;;wCAES;AACnB,UAAMC,GAAG,GAAG,KAAKF,QAAL,CAAcG,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAZ;AAEA,UAAIP,KAAJ,CAAUK,GAAV,EAAe;AACdG,QAAAA,IAAI,EAAE,KADQ;AAEdC,QAAAA,IAAI,EAAE;AACLC,UAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CADH;AAELC,UAAAA,QAAQ,EAAE,CAAC;AACVF,YAAAA,IAAI,EAAE,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,EAAyB,OAAzB,EAAiC,OAAjC,CADI;AAEVG,YAAAA,KAAK,EAAE,SAFG;AAGVC,YAAAA,eAAe,EAAE,CACjB,MADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,MAJiB,EAKjB,MALiB,CAHP;AAUVC,YAAAA,WAAW,EAAE,CACR,MADQ,EAER,MAFQ,EAGR,MAHQ,EAIR,MAJQ,EAKR,MALQ,CAVH;AAiBPC,YAAAA,WAAW,EAAE;AACZC,cAAAA,IAAI,EAAE,CADM;AAEZC,cAAAA,GAAG,EAAE;AAFO;AAjBN,WAAD;AAFL,SAFQ;AA4BdC,QAAAA,OAAO,EAAE,CAACjB,eAAD,CA5BK;AA6BdkB,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE,EADA;AAERC,UAAAA,UAAU,EAAE,IAFJ;AAGLC,UAAAA,mBAAmB,EAAE,KAHhB;AAILJ,UAAAA,OAAO,EAAE;AACLK,YAAAA,MAAM,EAAE;AACJC,cAAAA,OAAO,EAAE;AADL,aADH;AAILC,YAAAA,UAAU;AACTC,cAAAA,KAAK,EAAE,CACZ,MADY,EAEZ,MAFY,EAGZ,MAHY,EAIZ,MAJY,EAKZ,MALY,CADE;AAQTC,cAAAA,MAAM,EAAE,KARC;AASNC,cAAAA,KAAK,EAAE,KATD;AAUNC,cAAAA,SAAS,EAAEC,IAAI,CAACC,KAVV;AAWNC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,MAAM,EAAE,QADN;AAEdC,gBAAAA,IAAI,EAAE;AAFQ;AAXA,4BAeK,mBAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC7B,qBAAO,MAAMD,KAAK,CAACE,cAAN,GAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAb;AACH,aAjBE;AAJL,WAJJ;AA4BLC,UAAAA,MAAM,EAAE;AACVC,YAAAA,CAAC,EAAE;AACCC,cAAAA,IAAI,EAAE;AACJjB,gBAAAA,OAAO,EAAE;AADL;AADP,aADO;AAMVkB,YAAAA,CAAC,EAAE;AACGlB,cAAAA,OAAO,EAAE;AADZ;AANO;AA5BH;AA7BK,OAAf;AAqEA;;;6BACQ;AACR,0BACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AACA,QAAA,EAAE,EAAC,SADH;AAEA,QAAA,GAAG,EAAE,KAAKrB,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAQA;;;;EAtFwCJ,S;;SAArBG,Y","sourcesContent":["import React, { Component } from 'react';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nexport default class RevenueChart extends Component {\n\n\tchartRef = React.createRef();\n\n\tcomponentDidMount() {\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\n\t\t\n\t\tnew Chart(ctx, {\n\t\t\ttype: \"bar\",\n\t\t\tdata: {\n\t\t\t\tlabels: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\",],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: [4355000,4468000,4986000,5720000,6044000],\n\t\t\t\t\tlabel: 'Revenue',\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\"#fff\",\n\t\t\t\t\t\"#fff\",\n\t\t\t\t\t\"#fff\",\n\t\t\t\t\t\"#fff\",\n\t\t\t\t\t\"gold\"\n\t\t\t\t\t],\n\t\t\t\t\tborderColor: [\n\t\t\t\t      'grey',\n\t\t\t\t      'grey',\n\t\t\t\t      'grey',\n\t\t\t\t      'grey',\n\t\t\t\t      '#000',\n\t\t\t\t    ],\n\t\t\t\t    borderWidth: {\n\t\t\t\t    \tleft: 5,\n\t\t\t\t    \ttop: 1\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tplugins: [ChartDataLabels],\n\t\t\toptions: {\n\t\t\t\tevents: [],\n\t\t\t\tresponsive: true,\n    \t\t\tmaintainAspectRatio: false,\n\t\t\t    plugins: {\n\t\t\t        legend: {\n\t\t\t            display: false\n\t\t\t        },\n\t\t\t        datalabels: {\n\t\t\t\t        color: [\n\t\t\t\t\t\t\t\"grey\",\n\t\t\t\t\t\t\t\"grey\",\n\t\t\t\t\t\t\t\"grey\",\n\t\t\t\t\t\t\t\"grey\",\n\t\t\t\t\t\t\t\"#000\"\n\t\t\t\t\t\t\t],\n\t\t\t\t        anchor: 'end',\n\t\t\t            align: 'top',\n\t\t\t            formatter: Math.round,\n\t\t\t            font: {\n\t\t\t                weight: 'normal',\n\t\t\t\t\t\t\tsize: '16'\n\t\t\t            },\n\t\t\t            formatter: function(value, context) {\n\t\t                    return '$' + value.toLocaleString().slice(0, -4)\n\t\t                }\n\t\t\t\t      }\n\t\t\t\t\t},\n\t\t\t    scales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t    grid: {\n\t\t\t\t\t      display: false\n\t\t\t\t\t    }\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t      display: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className='chartRow'>\n\t\t\t\t<canvas\n\t\t\t\tid=\"myChart\"\n\t\t\t\tref={this.chartRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}